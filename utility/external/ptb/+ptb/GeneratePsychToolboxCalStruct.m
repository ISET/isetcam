% Method to generate a PTB CalStruct for a display with given properties
%
% 4/11/15  dhb  Change default gamma type to crtLinear.  This doesn't use
%               optimization toolbox, and is more like what isetbio does.
%
function cal = GeneratePsychToolboxCalStruct(varargin)

parser = inputParser;
parser.addParamValue('name', [], @ischar);
parser.addParamValue('dotsPerMeter', [], @isscalar);
parser.addParamValue('gammaInput', [], @isvector);
parser.addParamValue('gammaTable', [], @ismatrix);
parser.addParamValue('wave', [], @isvector);
parser.addParamValue('spd', [], @ismatrix);
parser.addParamValue('ambientSpd', [], @ismatrix);
parser.addParamValue('screenSizeInPixels', [], @isvector);

% Execute the parser
parser.parse(varargin{:});
% Create a standard Matlab structure from the parser results.
parserResults = parser.Results;
pNames = fieldnames(parserResults);
for k = 1:length(pNames)
    eval(sprintf('%s = parserResults.%s;', pNames{k}, pNames{k}));
end

spectralSamples = size(wave, 1);
nDevices = size(gammaTable, 2);

displayDescriptionStruct = struct( ...
    'screenSizeMM', screenSizeInPixels/(dotsPerMeter / 1000), ...
    'screenSizePixel', screenSizeInPixels, ...
    'refreshRate', 60, ...
    'bitsPerPixel', 32, ...
    'bitsPerSample', 8, ...
    'samplesPerPixel', nDevices ...
    );

gammaStruct = struct( ...
    'fitType', 'crtLinear', ...
    'contrastThresh', 0.001, ...
    'exponents', [], ...
    'fitBreakThresh', [], ...
    'useweight', [] ...
    );

describeStruct = struct( ...
    'S', WlsToS(wave), ...
    'blankOtherScreen', 1, ...
    'blankSettings', [], ...
    'boxOffsetX', 0, ...
    'boxOffsetY', 0, ...
    'boxSize', 150, ...
    'calibrationType', 'name of display', ...
    'caltype', 'monitor', ...
    'comment', 'some comment', ...
    'computer', 'some brainard lab computer', ...
    'dacsize', 8, ...
    'date', 'date of calibration', ...
    'displayDescription', displayDescriptionStruct, ...
    'driver', 'unknown_driver unknown_driver_version', ...
    'gamma', gammaStruct, ...
    'hz', 60, ...
    'leaveRoomTime', 10, ...
    'meterDistance', 0.5000, ...
    'monitor', 'name of display', ...
    'nAverage', 2, ...
    'nMeas', 25, ...
    'program', 'name of calibration program', ...
    'promptforname', 1, ...
    'screenSizePixel', [1920, 1200], ...
    'svnInfo', struct(), ...
    'whichBlankScreen', 3, ...
    'whichMeterType', 5, ...
    'whichScreen', 2, ...
    'who', 'name of person that did the calibration', ...
    'yokedmethod', [] ...
    );

rawDataStruct = struct( ...
    'rawGammaInput', gammaInput', ...
    'rawGammaTable', gammaTable ...
    );


% Generate a calStruct suitable for use with PTB Cal functions
cal = struct( ...
    'describe', describeStruct, ...
    'M_ambient_linear', [], ...
    'M_device_linear', [], ...
    'M_linear_device', [], ...
    'P_ambient', ambientSpd, ...
    'P_device', spd, ...
    'S_ambient', WlsToS(wave), ...
    'S_device', [], ...
    'S_linear', [], ...
    'S_sensor', [], ...
    'T_ambient', eye(spectralSamples), ...
    'T_device', eye(spectralSamples), ...
    'T_linear', [], ...
    'T_sensor', [], ...
    'ambient_linear', [], ...
    'basicmeas', struct(), ...
    'bgColor', [], ...
    'bgmeas', struct(), ...
    'fgColor', [], ...
    'gammaFormat', 0, ...
    'gammaInput', gammaInput', ...
    'gammaMode', [], ...
    'gammaTable', gammaTable, ...
    'iGammaTable', [], ...
    'rawdata', rawDataStruct, ...
    'nDevices', nDevices, ...
    'nPrimaryBases', 1 ...
    );

end